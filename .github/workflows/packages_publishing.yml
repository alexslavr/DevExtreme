name: Publishing to GitHub Packages

on:
  workflow_dispatch:
    inputs:
      filter:
        type: string
        description: Package file filter pattern
        required: false
      timestamp-version:
        type: boolean
        description: Set timestamp version
        required: false
        default: true
      next-tag:
        type: boolean
        description: Move 'next' tag
        required: false
        default: true
      stable-tag:
        type: boolean
        description: Move 'stable' tag
        required: false
        default: false

env:
  FILTER: ${{ github.event_name == 'workflow_dispatch' && inputs.filter || '' }}
  SET_TIMESTAMP_VERSION: ${{ (github.event_name == 'workflow_dispatch' && inputs.timestamp-version) || (github.event_name != 'workflow_dispatch' && true) }}
  MOVE_NEXT_TAG: ${{ (github.event_name == 'workflow_dispatch' && inputs.next-tag) || (github.event_name != 'workflow_dispatch' && true) }}
  MOVE_STABLE_TAG: ${{ (github.event_name == 'workflow_dispatch' && inputs.stable-tag) || (github.event_name != 'workflow_dispatch' && false) }}

jobs:

  build:
    name: Build packages
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Set up nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Set timestamp version
        if: ${{ env.SET_TIMESTAMP_VERSION == 'true' }}
        run: npx ts-node build/set-timestamp-version

      - name: Build npm packages
        env:
          BUILD_INTERNAL_PACKAGE: true
        run: npm run all:build

      - name: Build artifacts package
        run: npx ts-node build/make-artifacts-package

      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: artifacts/npm/*.tgz
          retention-days: 2

      - name: Filter packages
        id: filter
        working-directory: artifacts/npm
        run: ls *.tgz | grep -E -i "$FILTER" | sed -r 's/^(.*).tgz$/"\1"/g' | paste -sd "," - | sed -r 's/(.*)/packages=[\1]/' >> "$GITHUB_OUTPUT"
